@charset "utf-8";


@import url('https://fonts.googleapis.com/css2?family=DM+Sans:ital,wght@0,400;0,700;1,400;1,700&family=Epilogue:wght@600&display=swap');


// Define defaults for each variable.

$base-font-family: 'DM Sans', sans-serif;
$alternative-font-family: 'Epilogue', sans-serif;
$base-font-size:   1.125rem !default;
$small-font-size: .875rem !default;
$base-font-weight: 400 !default;
$bold-font-weight: 600 !default;
$base-line-height: 115% !default;
$small-line-height: 150% !default;

$spacing-xxs:    0.25rem !default;
$spacing-xs:     0.50rem !default;
$spacing-s:      1rem !default;
$spacing-m:    1.5rem !default;
$spacing-l:    2rem !default;
$spacing-xl:    2.5rem !default;
$spacing-xxl:    4rem !default;


// Width of the content area
$content-width:    1000px !default;
$on-laptop:        768px !default;

//defining scss variable 
//light theme
$colors: (
  text-color: #2D2D2D,
  grey-color-dark: #7C7C7C,
  background-color:  #F6F6F6
);
//dark theme
$colors-dark: (
  text-color: #F6F6F6,
  grey-color-dark: #A5A5A5,
  background-color: #2D2D2D
);

//converting scss variable into css variable
:root {
    @each $name, $color in $colors{
        --color-#{$name} : #{$color};
    }
  --theme: 'light';
}

@media(prefers-color-scheme: dark) {
    :root {
        @each $name, $color in $colors-dark{
            --color-#{$name} : #{$color};
        }
    --theme : 'dark';
    }
}
//creating a function to get color instead of using css varible
@function getColor($color-name){
    @return var(--color-#{$color-name});
}

// Use media queries like this:
// @include media-query($on-palm) {
//   .wrapper {
//     padding-right: $spacing-unit / 2;
//     padding-left: $spacing-unit / 2;
//   }
// }
@mixin media-query($device) {
  @media screen and (min-width: $device) {
    @content;
  }
}

@mixin relative-font-size($ratio) {
  font-size: $base-font-size * $ratio;
}

// Import partials.
@import
  "minima/base",
  "minima/layout",
  "minima/syntax-highlighting"
;
